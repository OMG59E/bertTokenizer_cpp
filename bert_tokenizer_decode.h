#pragma once
#include <string>

static const std::string tokenizer_decode_str = "";