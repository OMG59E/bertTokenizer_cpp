#pragma once
#include <string>

static const std::string tokenizer_encode_str = "";